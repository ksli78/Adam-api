# Dockerfile for Air-Gapped RAG API
#
# Multi-stage build for production deployment on RHEL9
#
# Build: docker build -f Dockerfile.airgapped -t airgapped-rag-api:latest .
# Run:   docker run -p 8000:8000 -v /data:/data airgapped-rag-api:latest
#

# Base image - using Python 3.11 on Red Hat UBI9 for RHEL9 compatibility
FROM registry.access.redhat.com/ubi9/python-311:latest AS base

USER root

# Install system dependencies
RUN dnf install -y \
    gcc \
    gcc-c++ \
    make \
    curl \
    && dnf clean all

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY airgapped_rag.py .
COPY example_usage.py .

# Create data directory
RUN mkdir -p /data/airgapped_rag && \
    chown -R 1001:0 /data && \
    chmod -R g+rwX /data

# Switch to non-root user for security
USER 1001

# Environment variables
ENV DATA_DIR=/data/airgapped_rag
ENV OLLAMA_BASE_URL=http://ollama:11434
ENV OLLAMA_EMBED_MODEL=nomic-embed-text
ENV OLLAMA_LLM_MODEL=llama3:8b
ENV HOST=0.0.0.0
ENV PORT=8000
ENV PYTHONUNBUFFERED=1

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

# Run the application
CMD ["python", "airgapped_rag.py"]
